@model HaveYouSeenMe.Models.MessageModel

@{
    ViewBag.Title = "Send Message";
}

@if (ViewBag.IsSent)
{
    <fieldset>
        <div class="editor-label">
            @Html.LabelFor(model => model.From)
        </div>
        <div class="editor-field">
            @Model.From
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Model.Email
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Subject)
        </div>
        <div class="editor-field">
            @Model.Subject
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Message)
        </div>
        <div class="editor-field">
            @Model.Message
        </div>

        <h2>
            Message sent...
        </h2>
    </fieldset>    
}
else
{
    <div id="messageForm">

        <h2>Send Message</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <fieldset>
                <legend>MessageModel</legend>

                <div class="editor-label">
                    @Html.LabelFor(model => model.From)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.From)
                    @Html.ValidationMessageFor(model => model.From)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Email)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Email)
                    @Html.ValidationMessageFor(model => model.Email)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Subject)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Subject)
                    @Html.ValidationMessageFor(model => model.Subject)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Message)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Message)
                    @Html.ValidationMessageFor(model => model.Message)
                </div>

                <p>
                    <input type="hidden" value="@ViewBag.PetName" id="PetName" name="PetName" />
                    <input type="submit" id="submitButton" value="Send Message" />
                </p>
            </fieldset>
        }
        <div id="petDetails">
            @using (Ajax.BeginForm("GetInfo", "Pet",
                        new RouteValueDictionary 
                        { 
                            { "id", ViewBag.PetName } 
                        },            
                        new AjaxOptions
                        {
                            HttpMethod = "Post",
                            InsertionMode = InsertionMode.Replace,
                            LoadingElementId = "loadingDetails",
                            OnSuccess = "showPetDetails"
                        }))
            {
                <input type="hidden" value="Fido" id="name" name="name" />
                <button type="submit">Get Pet Details @ViewBag.PetName</button>
            }
        </div>
        <div id="loadingDetails" style="display: none">
            Loading Pet...
        </div>

    </div>

    <div id="loading" style="display: none">
        Sending Message...
    </div>
}    

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function beginRequest() {
            $("#messageForm").hide();
        }

        function endRequest(request, status) {
            $("#messageForm").show();
        }
    </script>

    <script>
        function showPetDetails(petData) {
            console.log(petData);
            var target = $("#petDetails");
            target.empty();

            if (!petData) {
                target.append("<em>The pet was not found...</em>");
            }
            else {
                var lastSeenOn = petData.LastSeenOn ?
                    new Date(parseInt(petData.LastSeenOn.substr(6))) : null;
                var lastSeen = lastSeenOn ?
                        lastSeenOn.getMonth() + 1 + "/"
                                   + lastSeenOn.getDate() + "/"
                                   + lastSeenOn.getFullYear() : null;
                var age = petData.PetAgeYears + " years and "
                                   + petData.PetAgeMonths + " months";
                var photo = "<img src='/Content/Uploads/" + petData.PetName
                                   + ".jpg' style='width:150px;height:120px' />";
                target.append("<table>");
                target.append("   <tr><td>Name:</td><td>" + petData.PetName + "</td></tr>");
                target.append("   <tr><td>Age:</td><td>" + age + "</td></tr>");
                target.append("   <tr><td>Status:</td><td>" + petData.StatusDescription
                                                            + "</td></tr>");
                target.append("   <tr><td>Last Seen On:</td><td>" + lastSeen
                                                            + "</td></tr>");
                target.append("   <tr><td>Last Seen Where:</td><td>"
                                                    + petData.LastSeenWhere + "</td></tr>");
                target.append("   <tr><td></td><td>" + photo + "</td></tr>");
                target.append("</table>");
            }
        }
    </script>

@*    <script>
        $(document).ready(function () {
            $("#submitButton").on("click", function (e) {
                var email = $("#Email").val();
                if (email == "") {
                    e.preventDefault();
                    alert("Please enter your email address first.");
                }
            });
        });
    </script>*@
}


